#!/bin/bash

pushd()
{
    builtin pushd "$@" > /dev/null
}
popd()
{
    builtin popd "$@" > /dev/null
}

## Create a new initrd.baracus
##
##

DATADIR=workload
DSTDIR=$DATADIR/initrd.dir

[[ -d $DSTDIR ]] && rm -rf $DSTDIR
mkdir -p $DSTDIR
cp $DATADIR/initrd.opensuse-11.1 $DSTDIR

## Extract the image
##

pushd $DSTDIR
  mv initrd.opensuse-11.1 initrd.gz
  gzip -d initrd.gz
  cpio --quiet -id < initrd 
  rm initrd
  
  ## copy over the baracus data
  ##
  cp ../pxewait usr/bin/.
  cp ../busybox.dban usr/bin/.
  cp ../baracus.dban usr/bin/.
  cp ../baracus.image usr/bin/.
  cp ../baracus.mcast usr/bin/.
  cp ../baracus.clone usr/bin/.
  cp ../baracus.register usr/bin/.
  cp ../lshw-static.linux.ix86 usr/bin/.
  cp ../lshw-static.B.02.15 usr/bin/.
  cp ../halt sbin/.
  cp ../dropbear sbin/.
  mkdir -p log/dban
  cp -r ../terminfo usr/share/.
  mkdir -p etc/dropbear
  cp ../dropbear_rsa_host_key etc/dropbear
  chown root:root etc/dropbear/dropbear_rsa_host_key
  cp ../shells etc/.
  cp ../busybox-1.16.1.udpcast-20100130 usr/bin/busybox.udpcast
  cp ../shellexec usr/bin/.
  
  pushd usr
    ln -s . i386-linux-uclibc
  popd
  
  pushd sbin
    ln -s halt reboot
  popd
  
  pushd bin
    ln -s ../usr/bin/busybox.udpcast udp-receiver
    ln -s ../usr/bin/busybox.udpcast udp-sender
    ln -s ../usr/bin/busybox.dban ash
    ln -s ../usr/bin/busybox.dban cp
    ln -s ../usr/bin/busybox.dban date
    ln -s ../usr/bin/busybox.dban dd
    ln -s ../usr/bin/busybox.dban dmesg
    ln -s ../usr/bin/busybox.dban echo
    ln -s ../usr/bin/busybox.dban grep
    ln -s ../usr/bin/busybox.dban ls
    ln -s ../usr/bin/busybox.dban mv
    ln -s ../usr/bin/busybox.dban tar
  popd
  
  pushd usr/bin
    ln -s ../../usr/bin/busybox.dban clear
    ln -s ../../usr/bin/busybox.dban dwipe
    ln -s ../../usr/bin/busybox.dban sort
    ln -s ../../usr/bin/busybox.dban tr
    ln -s ../../usr/bin/busybox.dban wc
  popd
  
  pushd etc
    echo "root:Wvg7eFFQQVjbo:14869:0:99999:7:::" > shadow
    echo "root:x:0:0:root:/root:/usr/bin/shellexec" > tmppasswd
    grep -v "root" passwd >> tmppasswd
    mv tmppasswd passwd
  popd
  
  ## create the new image
  ##
  [ -f ../initrd.baracus ] && rm ../initrd.baracus
  find . | cpio --quiet --create --format='newc' > ../initrd.baracus
popd

pushd $DATADIR
  gzip initrd.baracus
  mv initrd.baracus.gz initrd.baracus
popd

[[ -d $DSTDIR ]] && rm -rf $DSTDIR

## complete
##
echo "initrd.baracus generation complete"
